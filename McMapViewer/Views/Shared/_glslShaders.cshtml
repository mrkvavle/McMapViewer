<script type="x-shader/x-vertex" id="vertexShader">


	varying vec3 vWorldPosition;
	void main() {
	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
	vWorldPosition = worldPosition.xyz;
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
	}

</script>

<script type="x-shader/x-fragment" id="jimsFragmentShader1">
	uniform vec3 topColor;
	uniform vec3 bottomColor;
	uniform float offset;
	uniform float exponent;
	varying vec3 vWorldPosition;

	void main()
	{
	float h ;


	vec3 asd[4];

	asd[0] = vec3(.0,.0,.27); //#000000 100%
	asd[1] = vec3(.0,.08,.57); //#001591 71%
	asd[2] = vec3(1.,.35,.35); // #ff5959 25%
	asd[3] = vec3(1.,.55,.31); //#ff8c4f 0%

	vec3 color;
	vec3 c1;
	vec3 c2;
	float grad;
	float y = normalize(vWorldPosition).y ;

	if(y  >= .750){
	c1 = asd[0];
	c2 = asd[1];

	grad = (y-.750)/(1.-.750) * (1.-.0) + .0;
	}

	else if(y  >= .35){
	c1 = asd[1];
	c2 = asd[2];

	grad = (y-.35)/(.750-.35) * (1.-.0) + .0;
	}

	else {
	c1 = asd[2];
	c2 = asd[3];
	grad = (y-.0)/(.35-.0) * (1.-.0) + .0;
	}

	gl_FragColor = vec4(mix(c2,c1,grad),.1  );
	}
</script>


<script type="x-shader/x-fragment" id="jimsFragmentShader">
	uniform vec3 topColor;
	uniform vec3 bottomColor;
	uniform float offset;
	uniform float exponent;
	varying vec3 vWorldPosition;

	void main()
	{
	float h ;


	vec3 asd[4];

	asd[0] = vec3(.075,.32,1.); //#000000 100%
	asd[1] = vec3(.32,.77,1.); //#001591 50%
	vec3 color;
	vec3 c1;
	vec3 c2;
	float grad;
	float y = normalize(vWorldPosition).y ;

	c1 = asd[0];
	c2 = asd[1];

	gl_FragColor = vec4(mix(c2,c1,y),.1  );
	}
</script>
